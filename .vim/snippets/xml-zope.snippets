# Created by textmate_to_snipmate_converter.py
# 2011-03-10 13:43:04.751842

# ZCML: permission
snippet <permission ZCML: permission
	<${1}zope:permission
	    ${2:id="${3}"}
	    ${4:title="${5}"}
	    />

# ZCML: page
snippet < ZCML: page
	<${1}page
	    ${2:for="${3}"}
	    ${4:class="${5}"}
	    ${6:layer="${7}"}
	    permission="${8}"
	    ${9:allowed_interface="${10}"}
	    ${11:allowed_attributes="${12}"}
	    />
	

# Generic Setup: catalog index
snippet <index Generic Setup: catalog index
	<${1}index ${2:name="${3}"} ${4:meta_type="${5}"}>
	  <indexed_attr ${6:value="${7}"}/>
	</index>

# ZCML: GenericSetup import step
snippet <import ZCML: GenericSetup import step
	<genericsetup:importStep
	    name="$1"
	    title="$2"
	    ${3:description="$4"}
	    handler="$5">
	  ${7:<depends name="$8"/>}
	</genericsetup:importStep>
	

# ZCML: GenericSetup export step
snippet <export ZCML: GenericSetup export step
	<genericsetup:exportStep
	    name="$1"
	    title="$2"
	    ${3:description="$4"}
	    handler="$5"
	    />
	

# ZCML: Include
snippet <include ZCML: Include
	<$1include 
	    ${2:package="${3}"}
	    ${4:file="${5}"}
	    />
	

# ZCML: GenericSetup upgrade step
snippet <upgrade ZCML: GenericSetup upgrade step
	<genericsetup:upgradeStep
	    title="$1"
	    description="$2"
	    source="$3"
	    destination="$4"
	    handler="$5"
	    sortkey="$6"
	    profile="$7"
	    />
	

# ZCML: Viewlet
snippet <viewlet ZCML: Viewlet
	<${1}viewlet
	    ${2:name="${3}"}
	    ${4:for="${5}"}
	    ${6:manager="${7}"}
	    ${8:template="${9}"}
	    ${10:layer="${11}"}
	    ${12:permission="${13}"}
	    />

# ZCML: GenericSetup upgrade step group
snippet <upgradeg ZCML: GenericSetup upgrade step group
	<genericsetup:upgradeSteps
	    source="$1"
	    destination="$2"
	    sortkey="$3"
	    profile="$4">
	  <genericsetup:upgradeStep
	      title="$5"
	      description="$6"
	      handler="$7"
	      />
	</genericsetup:upgradeSteps>
	

# ZCML: configure
snippet <configure ZCML: configure
	<configure
	    xmlns:${1:zope}="http://namespaces.zope.org/zope"
	    xmlns:${2:browser}="http://namespaces.zope.org/browser">
	  ${3}
	</configure>
	

# ZCML: Interface
snippet <interface ZCML: Interface
	<${1}interface
	    ${2:interface="${3}"}
	    ${4:type="${5}"}
	    ${6:name="${7}"}
	    />

# ZCML: Adapter
snippet <adapter ZCML: Adapter
	<${1}adapter
	    ${2:factory = "${3}"}
	    ${4:for = "${5}"}
	    ${6:provides = "${7}"}
	    ${8:name = "${9}"}
	    ${10:permission = "${11}"}
	    ${12:trusted = "${13}"}
	    ${14:locate = "${15}"}
	    />

# Generic Setup: directory view
snippet <object Generic Setup: directory view
	<${1}object
	  name="${2}"
	  meta_type="Filesystem Directory View"
	  directory="${3}"/>
	

# ZCML: Implements
snippet <implements ZCML: Implements
	<$1implements interface="$2"/>

# ZCML: grant
snippet <grant ZCML: grant
	<${1}zope:grant
	    ${2:permission="${3}"}
	    ${4:role="${5}"}
	    />

# Generic Setup: permission
snippet <permission Generic Setup: permission
	<${1}permission ${2:name="${3}"} ${4:acquire="${5}"}>
	  <role ${6:name="${7}"}/>
	</permission>

# Generic Setup: skin path
snippet <skin-path Generic Setup: skin path
	<${1}skin-path name="${2:Plone Default}">
	  ${3}
	</skin-path>

# ZCML: factory
snippet < ZCML: factory
	<${1}factory
	    component="${2}"
	    ${3:description="${4}"}
	    ${5:id="${6}"}
	    ${7:title="${8}"}
	    />
	

# ZCML: Class
snippet <class ZCML: Class
	<${1}class class="${2}">
	  ${3:<${4}allow
	      ${5:attributes="${6}"}
	      ${7:interface="${8}"}/>}
	  ${9:<${10}factory
	      ${11:id="${12}"}
	      ${13:title="${14}"}
	      ${15:description="${16}"}/>}
	  ${17:<${18}implements 
	      ${19:interface="${20}"} />}
	  ${21}
	</class>

# ZCML: Utility
snippet <utility ZCML: Utility
	<${1}utility
	    ${2:component="${3}"}
	    ${4:factory="${5}"}
	    ${6:provides="${7}"}
	    ${8:name="${9}"}
	    ${10:permission="${11}"}
	    />

# Generic Setup: skin layer
snippet <layer Generic Setup: skin layer
	<${1}layer name="${2}" ${3:insert-after="${4:custom}"}/>
	

# ZCML: AddMenuItem
snippet <addMenuItem ZCML: AddMenuItem
	<${1}addMenuItem
	    ${2:title="${3}"}
	    ${4:description="${5}"}
	    ${6:for="${7}"}
	    ${8:factory="${9}"}
	    ${10:view="${11}"}
	    ${12:class="${13}"}
	    ${14:permission="${15}"}
	    ${16:order="${17}"}
	    ${18:filter="${19}"}
	    ${20:layer="${21}"}
	    ${22:icon="${23}"}
	    ${24:menu="${25}"}
	    />

# Generic Setup: role
snippet <role Generic Setup: role
	<${1}role ${2:name="${3}"}/>

# ZCML: role
snippet <role ZCML: role
	<${1}zope:role
	    ${2:id="${3}"}
	    ${4:title="${5}"}
	    />

# ZCML: Require
snippet <require ZCML: Require
	${1:<${2}require
	    ${3:attributes="${4}"}
	    ${5:interface="${6}"}
	    ${7:set_attributes="${8}"}
	    ${9:set_schema="${10}"}
	    ${11:like_class="${12}"}
	    ${13:permission="${14}"}
	    />}

# Generic Setup: catalog column
snippet <col Generic Setup: catalog column
	<${1}column ${2:value="${3}"}/>

# Generic Setup: folderish type
snippet <ftype Generic Setup: folderish type
	<?xml version="1.0"?>
	<object name="${1}"
	  meta_type="Factory-based Type Information with dynamic views"
	  xmlns:i18n="http://xml.zope.org/namespaces/i18n">
	  
	  <property name="title">${1}</property>
	  <property name="description">${2}</property>
	  <property name="content_icon">folder_icon.gif</property>
	  <property name="content_meta_type">${1}</property>
	  <property name="product">${3}</property>
	  <property name="factory">add${1}</property>
	  <property name="immediate_view">folder_listing</property>
	  <property name="global_allow">True</property>
	  <property name="filter_content_types">${4}</property>
	  <property name="allowed_content_types">
	   ${5:<element value="${6}"/>}
	  </property>
	  <property name="allow_discussion">False</property>
	  <property name="default_view">${7:folder_listing}</property>
	  <property name="view_methods">
	   ${8:<element value="${9}folder_listing"/>}
	  </property>
	  
	  <alias from="(Default)" to="(dynamic view)"/>
	  <alias from="edit" to="atct_edit"/>
	  <alias from="index.html" to="(dynamic view)"/>
	  <alias from="properties" to="base_metadata"/>
	  <alias from="sharing" to="folder_localrole_form"/>
	  <alias from="view" to="(selected layout)"/>
	
	  <action title="View" action_id="view" category="object" condition_expr=""
	    url_expr="string:${folder_url}/" visible="True">
	    <permission value="View"/>
	  </action>
	
	  <action title="Edit" action_id="edit" category="object" condition_expr=""
	    url_expr="string:${object_url}/edit" visible="True">
	    <permission value="Modify portal content"/>
	  </action>
	
	  <action title="Properties" action_id="metadata" category="object"
	    condition_expr="" url_expr="string:${object_url}/properties"
	    visible="True">
	    <permission value="Modify portal content"/>
	  </action>
	
	  <action title="References" action_id="references" category="object"
	    condition_expr="object/archetype_tool/has_graphviz"
	    url_expr="string:${object_url}/reference_graph" visible="True">
	    <permission value="Modify portal content"/>
	    <permission value="Review portal content"/>
	  </action>
	
	  <action title="Folder Listing" action_id="folderlisting" category="folder"
	    condition_expr="object/isPrincipiaFolderish"
	    url_expr="string:${folder_url}/view" visible="False">
	    <permission value="View"/>
	  </action>
	
	  <action title="Sharing" action_id="local_roles" category="object"
	    condition_expr="" url_expr="string:${object_url}/sharing" visible="True">
	    <permission value="Manage properties"/>
	  </action>
	
	  <action title="State" action_id="content_status_history"
	    category="object_tabs"
	    condition_expr="python:object and portal.portal_workflow.getTransitionsFor(object, object.getParentNode())"
	    url_expr="string:$object_url/content_status_history" visible="False">
	    <permission value="View"/>
	  </action>
	
	  <action title="External Edit" action_id="external_edit" category="object"
	    condition_expr="" url_expr="string:$object_url/external_edit"
	    visible="False">
	    <permission value="Modify portal content"/>
	  </action>
	
	</object>
	

